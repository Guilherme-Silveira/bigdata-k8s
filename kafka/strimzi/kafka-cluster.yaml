apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: kafka
  namespace: bigdata
spec:
  kafka:
    version: 3.1.0
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.1"
    storage:
      type: persistent-claim
      size: 15Gi
      deleteClaim: false
  zookeeper:
    replicas: 3
    storage:
      type: persistent-claim
      size: 10Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: apps/v1 
kind: Deployment
metadata:
  name: kafka-ui
  namespace: bigdata
spec:
  selector:
    matchLabels:
      app: kafka-ui
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka-ui
    spec:
      containers:
      - name: kafka-ui
        image: provectuslabs/kafka-ui
        env:
        - name: KAFKA_CLUSTERS_0_NAME
          value: kafka
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: kafka-kafka-brokers:9092
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "1Gi"
            cpu: "2"
        imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-ui
  namespace: bigdata
spec:
  ports:
  - port: 8080
  selector:
    app: kafka-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ingress
  namespace: bigdata
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: kafka.silveira.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kafka-kafka-brokers
                port:
                  number: 9092
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kafka-ui-ingress
  namespace: bigdata
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    - host: kafka-ui.silveira.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kafka-ui
                port:
                  number: 8080
